{"ast":null,"code":"var _jsxFileName = \"/Users/veliuysal/Desktop/educations/Solidity/dapp/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [name, setName] = useState(\"\");\n  let [balance, setBalance] = useState();\n  let [symbol, setSymbol] = useState();\n  let [decimals, setDecimals] = useState();\n  let [connected, setConnected] = useState(false);\n  let [tokenAddress, setTokenAddress] = useState();\n  let {\n    ethereum\n  } = window;\n  let tokenContract = null;\n  let signer = null;\n  //let tokenAbi = JSON.parse('[{\"inputs\": [],\"stateMutability\": \"nonpayable\", \"type\": \"constructor\"},{\"anonymous\": false,\"inputs\": [{\"indexed\": true,\"internalType\": \"address\",\"name\": \"_from\",\"type\": \"address\"},{\"indexed\": true,\"internalType\": \"address\",\"name\": \"_to\",\"type\": \"address\"},{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"_value\",\"type\": \"uint256\"}],\"name\": \"Transfer\",\"type\": \"event\"},{\"inputs\": [{ \"internalType\": \"address\",\"name\": \"account\",\"type\": \"address\"}],\"name\": \"balanceOf\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}], \"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"decimals\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"name\",\"outputs\": [{\"internalType\": \"string\",\"name\": \"\",\"type\": \"string\"}],\"stateMutability\": \"view\",\"type\": \"function\"}, {\"inputs\": [],\"name\": \"owner\",\"outputs\": [{\"internalType\": \"address\",\"name\": \"\",\"type\": \"address\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"symbol\",\"outputs\": [{\"internalType\": \"string\",\"name\": \"\",\"type\": \"string\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"totalSupply\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}],\"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [{\"internalType\": \"address\",\"name\": \"to\",\"type\": \"address\"},{\"internalType\": \"uint256\",\"name\": \"amount\",\"type\": \"uint256\"}],\"name\": \"transfer\",\"outputs\": [],\"stateMutability\": \"nonpayable\",\"type\": \"function\"}]');\n  let tokenAbi = [\"function transfer(address, amount)\", \"function balanceOf(address) view returns (uint256)\", \"function decimals() view returns (uint8)\", \"function symbol() view returns (string)\", \"function name() public view returns (string)\"];\n  if (ethereum) {\n    let address = \"0xB994b0F2579587f5E6b2ea5972D3398f04c00628\";\n    let provider = new ethers.providers.Web3Provider(ethereum);\n    signer = provider.getSigner();\n    tokenContract = new ethers.Contract(address, tokenAbi, signer);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (tokenContract && !connected) {\n          ethereum.request({\n            method: 'eth_requestAccounts'\n          }).then(accounts => {\n            setConnected(true);\n          });\n        }\n      },\n      children: !connected ? 'Connect wallet' : 'Connected'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Connected Token Address: \", tokenAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          if (tokenContract && connected) {\n            const _name = await tokenContract.name();\n            setName(_name);\n          }\n        },\n        children: \"Get Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Name: \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          if (tokenContract && connected) {\n            const _symbol = await tokenContract.symbol();\n            setSymbol(_symbol);\n          }\n        },\n        children: \"Get Symbol\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Symbol: \", symbol]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          if (tokenContract && connected) {\n            const _decimals = await tokenContract.decimals();\n            setDecimals(_decimals);\n          }\n        },\n        children: \"Get Decimals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Decimals: \", decimals]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sVuS0eKCzIVRFuMP+MJ97fqvtqk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","ethers","jsxDEV","_jsxDEV","App","_s","name","setName","balance","setBalance","symbol","setSymbol","decimals","setDecimals","connected","setConnected","tokenAddress","setTokenAddress","ethereum","window","tokenContract","signer","tokenAbi","address","provider","providers","Web3Provider","getSigner","Contract","className","children","onClick","request","method","then","accounts","fileName","_jsxFileName","lineNumber","columnNumber","_name","_symbol","_decimals","_c","$RefreshReg$"],"sources":["/Users/veliuysal/Desktop/educations/Solidity/dapp/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { ethers } from \"ethers\";\n \nfunction App() {\n  let [name, setName] = useState(\"\");\n  let [balance, setBalance] = useState();\n  let [symbol, setSymbol] = useState();\n  let [decimals, setDecimals] = useState();\n  let [connected, setConnected] = useState(false);\n  let [tokenAddress, setTokenAddress] = useState();\n \n  let { ethereum } = window;\n  let tokenContract = null;\n  let signer=null;\n  //let tokenAbi = JSON.parse('[{\"inputs\": [],\"stateMutability\": \"nonpayable\", \"type\": \"constructor\"},{\"anonymous\": false,\"inputs\": [{\"indexed\": true,\"internalType\": \"address\",\"name\": \"_from\",\"type\": \"address\"},{\"indexed\": true,\"internalType\": \"address\",\"name\": \"_to\",\"type\": \"address\"},{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"_value\",\"type\": \"uint256\"}],\"name\": \"Transfer\",\"type\": \"event\"},{\"inputs\": [{ \"internalType\": \"address\",\"name\": \"account\",\"type\": \"address\"}],\"name\": \"balanceOf\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}], \"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"decimals\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"name\",\"outputs\": [{\"internalType\": \"string\",\"name\": \"\",\"type\": \"string\"}],\"stateMutability\": \"view\",\"type\": \"function\"}, {\"inputs\": [],\"name\": \"owner\",\"outputs\": [{\"internalType\": \"address\",\"name\": \"\",\"type\": \"address\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"symbol\",\"outputs\": [{\"internalType\": \"string\",\"name\": \"\",\"type\": \"string\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"totalSupply\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}],\"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [{\"internalType\": \"address\",\"name\": \"to\",\"type\": \"address\"},{\"internalType\": \"uint256\",\"name\": \"amount\",\"type\": \"uint256\"}],\"name\": \"transfer\",\"outputs\": [],\"stateMutability\": \"nonpayable\",\"type\": \"function\"}]');\n let tokenAbi=[\n  \"function transfer(address, amount)\",\n  \"function balanceOf(address) view returns (uint256)\",\n  \"function decimals() view returns (uint8)\",\n  \"function symbol() view returns (string)\",\n  \"function name() public view returns (string)\",\n];\n\n  if (ethereum) {\n    let address = \"0xB994b0F2579587f5E6b2ea5972D3398f04c00628\";\n    let provider = new ethers.providers.Web3Provider(ethereum);\n    signer = provider.getSigner();\n    tokenContract = new ethers.Contract(address, tokenAbi, signer);\n  }\n \n  return (\n    <div className=\"App\">\n \n      <button onClick={() => {\n          if (tokenContract && !connected) {\n              ethereum.request({ method: 'eth_requestAccounts'})\n                  .then(accounts => {\n                      setConnected(true);\n                  })\n          }\n      }}>{!connected ? 'Connect wallet' : 'Connected' }</button>\n <div>\n <span>Connected Token Address: {tokenAddress}</span>\n      <button onClick={async () => {\n        if (tokenContract && connected) {\n          const _name= await tokenContract.name();\n          setName(_name);\n        }\n      }}>Get Name</button>\n \n      <span>Name: {name}</span>\n </div>\n \n <div>\n      <button onClick={async () => {\n        if (tokenContract && connected) {\n          const _symbol= await tokenContract.symbol();\n          setSymbol(_symbol);\n        }\n      }}>Get Symbol</button>\n \n      <span>Symbol: {symbol}</span>\n </div>\n\n\n <div>\n      <button onClick={async () => {\n        if (tokenContract && connected) {\n          const _decimals= await tokenContract.decimals();\n          setDecimals(_decimals);\n        }\n      }}>Get Decimals</button>\n \n      <span>Decimals: {decimals}</span>\n </div>\n      \n    </div>\n  );\n}\n \nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}