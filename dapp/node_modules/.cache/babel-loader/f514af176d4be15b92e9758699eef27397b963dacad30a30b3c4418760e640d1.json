{"ast":null,"code":"var _jsxFileName = \"/Users/veliuysal/Desktop/educations/Solidity/dapp/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [name, setName] = useState(\"\");\n  let [balance, setBalance] = useState();\n  let [symbol, setSymbol] = useState();\n  let [decimals, setDecimals] = useState();\n  let [connected, setConnected] = useState(false);\n  let [tokenAddress, setTokenAddress] = useState();\n  let [connectedAddress, setConnectedAddress] = useState();\n  let {\n    ethereum\n  } = window;\n  let tokenContract = null;\n  let signer = null;\n  //let tokenAbi = JSON.parse('[{\"inputs\": [],\"stateMutability\": \"nonpayable\", \"type\": \"constructor\"},{\"anonymous\": false,\"inputs\": [{\"indexed\": true,\"internalType\": \"address\",\"name\": \"_from\",\"type\": \"address\"},{\"indexed\": true,\"internalType\": \"address\",\"name\": \"_to\",\"type\": \"address\"},{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"_value\",\"type\": \"uint256\"}],\"name\": \"Transfer\",\"type\": \"event\"},{\"inputs\": [{ \"internalType\": \"address\",\"name\": \"account\",\"type\": \"address\"}],\"name\": \"balanceOf\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}], \"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"decimals\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"name\",\"outputs\": [{\"internalType\": \"string\",\"name\": \"\",\"type\": \"string\"}],\"stateMutability\": \"view\",\"type\": \"function\"}, {\"inputs\": [],\"name\": \"owner\",\"outputs\": [{\"internalType\": \"address\",\"name\": \"\",\"type\": \"address\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"symbol\",\"outputs\": [{\"internalType\": \"string\",\"name\": \"\",\"type\": \"string\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"totalSupply\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}],\"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [{\"internalType\": \"address\",\"name\": \"to\",\"type\": \"address\"},{\"internalType\": \"uint256\",\"name\": \"amount\",\"type\": \"uint256\"}],\"name\": \"transfer\",\"outputs\": [],\"stateMutability\": \"nonpayable\",\"type\": \"function\"}]');\n  let tokenAbi = [\"function transfer(address, amount)\", \"function balanceOf(address) view returns (uint256)\", \"function decimals() view returns (uint8)\", \"function symbol() view returns (string)\", \"function name() public view returns (string)\"];\n  if (ethereum) {\n    let address = \"0xB994b0F2579587f5E6b2ea5972D3398f04c00628\";\n    let provider = new ethers.providers.Web3Provider(ethereum);\n    signer = provider.getSigner();\n    tokenContract = new ethers.Contract(address, tokenAbi, signer);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          if (tokenContract && !connected) {\n            ethereum.request({\n              method: \"eth_requestAccounts\"\n            }).then(accounts => {\n              setConnected(true);\n              setConnectedAddress(accounts[0]);\n            });\n            setTokenAddress(await tokenContract.address);\n          }\n        },\n        children: !connected ? \"Connect wallet\" : \"Connected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Connected Address: \", connectedAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Connected Token Address: \", tokenAddress]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          if (tokenContract && connected) {\n            const _name = await tokenContract.name();\n            setName(_name);\n          }\n        },\n        children: \"Get Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Name: \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          if (tokenContract && connected) {\n            const _symbol = await tokenContract.symbol();\n            setSymbol(_symbol);\n          }\n        },\n        children: \"Get Symbol\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Symbol: \", symbol]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          if (tokenContract && connected) {\n            const _decimals = await tokenContract.decimals();\n            setDecimals(_decimals);\n          }\n        },\n        children: \"Get Decimals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Decimals: \", decimals]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          if (tokenContract && connected) {\n            console.log(connectedAddress);\n            const _balance = await tokenContract.balanceOf(connectedAddress);\n            setBalance(ethers.utils.formatEther(_balance) * 10 ** 18);\n          }\n        },\n        children: \"Get Balance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Balance: \", balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"text\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          if (tokenContract && connected) {\n            console.log(connectedAddress);\n            const _balance = await tokenContract.balanceOf(connectedAddress);\n            setBalance(ethers.utils.formatEther(_balance) * 10 ** 18);\n          }\n        },\n        children: \"Transfer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Balance After Transfer: \", balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RVI8MpB3T7Y/omYkZzgrjvh5g/Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","ethers","jsxDEV","_jsxDEV","App","_s","name","setName","balance","setBalance","symbol","setSymbol","decimals","setDecimals","connected","setConnected","tokenAddress","setTokenAddress","connectedAddress","setConnectedAddress","ethereum","window","tokenContract","signer","tokenAbi","address","provider","providers","Web3Provider","getSigner","Contract","className","children","onClick","request","method","then","accounts","fileName","_jsxFileName","lineNumber","columnNumber","_name","_symbol","_decimals","console","log","_balance","balanceOf","utils","formatEther","_c","$RefreshReg$"],"sources":["/Users/veliuysal/Desktop/educations/Solidity/dapp/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { ethers } from \"ethers\";\n\nfunction App() {\n  let [name, setName] = useState(\"\");\n  let [balance, setBalance] = useState();\n  let [symbol, setSymbol] = useState();\n  let [decimals, setDecimals] = useState();\n  let [connected, setConnected] = useState(false);\n  let [tokenAddress, setTokenAddress] = useState();\n  let [connectedAddress, setConnectedAddress] = useState();\n\n  let { ethereum } = window;\n  let tokenContract = null;\n  let signer = null;\n  //let tokenAbi = JSON.parse('[{\"inputs\": [],\"stateMutability\": \"nonpayable\", \"type\": \"constructor\"},{\"anonymous\": false,\"inputs\": [{\"indexed\": true,\"internalType\": \"address\",\"name\": \"_from\",\"type\": \"address\"},{\"indexed\": true,\"internalType\": \"address\",\"name\": \"_to\",\"type\": \"address\"},{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"_value\",\"type\": \"uint256\"}],\"name\": \"Transfer\",\"type\": \"event\"},{\"inputs\": [{ \"internalType\": \"address\",\"name\": \"account\",\"type\": \"address\"}],\"name\": \"balanceOf\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}], \"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"decimals\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"name\",\"outputs\": [{\"internalType\": \"string\",\"name\": \"\",\"type\": \"string\"}],\"stateMutability\": \"view\",\"type\": \"function\"}, {\"inputs\": [],\"name\": \"owner\",\"outputs\": [{\"internalType\": \"address\",\"name\": \"\",\"type\": \"address\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"symbol\",\"outputs\": [{\"internalType\": \"string\",\"name\": \"\",\"type\": \"string\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"totalSupply\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}],\"stateMutability\": \"view\", \"type\": \"function\"}, {\"inputs\": [{\"internalType\": \"address\",\"name\": \"to\",\"type\": \"address\"},{\"internalType\": \"uint256\",\"name\": \"amount\",\"type\": \"uint256\"}],\"name\": \"transfer\",\"outputs\": [],\"stateMutability\": \"nonpayable\",\"type\": \"function\"}]');\n  let tokenAbi = [\n    \"function transfer(address, amount)\",\n    \"function balanceOf(address) view returns (uint256)\",\n    \"function decimals() view returns (uint8)\",\n    \"function symbol() view returns (string)\",\n    \"function name() public view returns (string)\",\n  ];\n\n  if (ethereum) {\n    let address = \"0xB994b0F2579587f5E6b2ea5972D3398f04c00628\";\n    let provider = new ethers.providers.Web3Provider(ethereum);\n    signer = provider.getSigner();\n    tokenContract = new ethers.Contract(address, tokenAbi, signer);\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        <button\n          onClick={async () => {\n            if (tokenContract && !connected) {\n              ethereum\n                .request({ method: \"eth_requestAccounts\" })\n                .then((accounts) => {\n                  setConnected(true);\n                  setConnectedAddress(accounts[0]);\n                });\n                setTokenAddress(await tokenContract.address)\n            }\n          }}\n        >\n          {!connected ? \"Connect wallet\" : \"Connected\"}\n        </button> \n        <span>Connected Address: {connectedAddress}</span>\n      </div>\n      <span>Connected Token Address: {tokenAddress}</span>\n      <div>\n        <button\n          onClick={async () => {\n            if (tokenContract && connected) {\n              const _name = await tokenContract.name();\n              setName(_name);\n            }\n          }}\n        >\n          Get Name\n        </button>\n\n        <span>Name: {name}</span>\n      </div>\n\n      <div>\n        <button\n          onClick={async () => {\n            if (tokenContract && connected) {\n              const _symbol = await tokenContract.symbol();\n              setSymbol(_symbol);\n            }\n          }}\n        >\n          Get Symbol\n        </button>\n\n        <span>Symbol: {symbol}</span>\n      </div>\n\n      <div>\n        <button\n          onClick={async () => {\n            if (tokenContract && connected) {\n              const _decimals = await tokenContract.decimals();\n              setDecimals(_decimals);\n            }\n          }}\n        >\n          Get Decimals\n        </button>\n\n        <span>Decimals: {decimals}</span>\n      </div>\n\n\n      <div>\n        <button\n          onClick={async () => {\n            if (tokenContract && connected) {\n              console.log(connectedAddress)\n              const _balance = await tokenContract.balanceOf(connectedAddress);\n              setBalance(ethers.utils.formatEther(_balance) * 10**18);\n            }\n          }}\n        >\n          Get Balance\n        </button>\n\n        <span>Balance: {balance}</span>\n      </div>\n\n      <div>\n        <text></text>\n        <button\n          onClick={async () => {\n            if (tokenContract && connected) {\n              console.log(connectedAddress)\n              const _balance = await tokenContract.balanceOf(connectedAddress);\n              setBalance(ethers.utils.formatEther(_balance) * 10**18);\n            }\n          }}\n        >\n          Transfer\n        </button>\n\n        <span>Balance After Transfer: {balance}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}